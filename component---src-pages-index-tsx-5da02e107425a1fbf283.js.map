{"version":3,"file":"component---src-pages-index-tsx-5da02e107425a1fbf283.js","mappings":"qKAEA,IAoBA,GApBc,E,QAAA,yX,oBCwBd,EAlB2D,YAEvD,IADFA,EACC,EADDA,WAEA,OACEC,EAAAA,EAAAA,IAAAA,MAAAA,KAEID,EAAWE,KAAI,SAACC,GACd,OACEF,EAAAA,EAAAA,IAACG,EAAD,CAAUC,IAAKF,IACbF,EAAAA,EAAAA,IAACK,EAAAA,KAAD,CAAMC,GAAE,aAAeJ,GAAaA,U,iGCf3C,IAAMK,GAAkB,+ZAsBlBC,GAAa,iRAkBbC,GAAe,qGAKfC,GAAY,sG,UCNzB,EA1BmD,YAM/C,IALFC,EAKC,EALDA,MACAC,EAIC,EAJDA,KACAb,EAGC,EAHDA,WACAc,EAEC,EAFDA,QACAC,EACC,EADDA,KAEA,OACEd,EAAAA,EAAAA,IAACO,EAAD,MACEP,EAAAA,EAAAA,IAACe,EAAAA,EAAD,CAAchB,WAAYA,KAE1BC,EAAAA,EAAAA,IAACQ,EAAD,MACER,EAAAA,EAAAA,IAACK,EAAAA,KAAD,CAAMC,GAAIQ,GAAOH,KAEnBX,EAAAA,EAAAA,IAACS,EAAD,CACEO,wBAAyB,CACvBC,OAAQJ,MAGZb,EAAAA,EAAAA,IAACU,EAAD,MACEV,EAAAA,EAAAA,IAAAA,OAAAA,KAAOY,MCjCR,IAAMM,GAAe,4QC4B5B,EAjBmD,YAE/C,IADFC,EACC,EADDA,MAEA,OACEnB,EAAAA,EAAAA,IAACkB,EAAD,KAEIC,EAAMlB,KAAI,oBACRmB,KAAQC,EADA,EACAA,GAAcC,EADd,EACIC,OAAUD,KAAQE,EADtB,EACsBA,YADtB,OAGRxB,EAAAA,EAAAA,IAACyB,GAAD,UAAcD,EAAd,CAA2BpB,IAAKiB,EAAIP,KAAMQ,W,mECpB7C,IAAMI,GAAkB,sMAalBC,GAAgB,0JAQhBC,GAAS,gJAMTC,GAAO,sI,8BChBpB,IAAMC,GAAsB,OAAOC,EAAAA,EAAP,qBAAHC,CAAAA,KAAAA,UAAAA,OAAAA,mHA6BzB,EAjBwC,WAEtC,IAAQC,GAA4BC,EAAAA,EAAAA,gBAAe,cAA3CD,KAYR,OAAOjC,EAAAA,EAAAA,IAAC8B,EAAD,CAAqBK,MAAOF,EAAKG,gBAAgBC,gBAAiBC,IAAI,mBCb/E,EAjBwC,WACtC,OACEtC,EAAAA,EAAAA,IAAC0B,EAAD,MACE1B,EAAAA,EAAAA,IAACuC,EAAD,OACAvC,EAAAA,EAAAA,IAAC2B,EAAD,MACE3B,EAAAA,EAAAA,IAAAA,KAAAA,KAAAA,QACAA,EAAAA,EAAAA,IAAC4B,EAAD,mCACA5B,EAAAA,EAAAA,IAAC6B,EAAD,MACE7B,EAAAA,EAAAA,IAAAA,IAAAA,KAAAA,YACAA,EAAAA,EAAAA,IAAAA,IAAAA,CAAGwC,KAAK,4BAA4BC,OAAO,UAA3C,cACAzC,EAAAA,EAAAA,IAAAA,IAAAA,CAAGwC,KAAK,yCAAyCC,OAAO,UAAxD,qB,uECgCV,UApCiD,YAI7C,IAFqBC,EAEtB,EAHDC,KACEC,kBAAqBF,MAGvB,OACE1C,EAAAA,EAAAA,IAAC6C,EAAAA,EAAD,MACE7C,EAAAA,EAAAA,IAAC8C,EAAAA,EAAD,OACA9C,EAAAA,EAAAA,IAAC+C,EAAAA,EAAD,CAAU5B,MAAQuB","sources":["webpack://gatsby-starter-default/./src/components/Post/CategoryList.style.tsx","webpack://gatsby-starter-default/./src/components/Post/CategoryList.tsx","webpack://gatsby-starter-default/./src/components/Post/PostItem.style.tsx","webpack://gatsby-starter-default/./src/components/Post/PostItem.tsx","webpack://gatsby-starter-default/./src/components/Post/PostList.style.tsx","webpack://gatsby-starter-default/./src/components/Post/PostList.tsx","webpack://gatsby-starter-default/./src/components/Profile/Introduction.style.tsx","webpack://gatsby-starter-default/./src/components/Profile/ProfileImage.tsx","webpack://gatsby-starter-default/./src/components/Profile/Introduction.tsx","webpack://gatsby-starter-default/./src/pages/index.tsx"],"sourcesContent":["import styled from \"@emotion/styled\"\r\n\r\nconst Category = styled.span`\r\n  margin-right: 0.6rem;\r\n  margin-bottom: 0.6rem;\r\n  text-transform: uppercase;\r\n  font-size: var(--size-300);\r\n\r\n  & a {\r\n    position: relative;\r\n    background-color: rgba(255, 255, 255, 0.7);\r\n    padding: 0.2rem 0.6rem;\r\n    border: 1px solid rgba(230, 230, 230, 1);\r\n    border-radius: 4px;\r\n  }\r\n\r\n  & a:hover {\r\n    background-color: rgba(237, 85, 110, 0.7);\r\n    color: rgba(255, 255, 255, 1);\r\n  }\r\n`;\r\n\r\nexport default Category","import React, { FunctionComponent } from 'react'\r\nimport Category from './CategoryList.style'\r\nimport { Link } from 'gatsby'\r\n\r\ntype CategoryListProps = {\r\n  categories: string[]\r\n}\r\n\r\nconst CategoryList: FunctionComponent<CategoryListProps> = function ({\r\n  categories\r\n}) {\r\n  return (\r\n    <div>\r\n      {\r\n        categories.map((category: string) => {\r\n          return (\r\n            <Category key={category}>\r\n              <Link to={`/category/${category}`}>{category}</Link>\r\n            </Category>\r\n          );\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CategoryList","import styled from '@emotion/styled'\r\n\r\nexport const StyledPostListItem = styled.li`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 1.5rem;\r\n  border: 1px solid rgba(255, 255, 255, 0.5);\r\n  background-color: rgba(250, 250, 250, 0.3);\r\n  backdrop-filter: blur(10px);\r\n  border-radius: 8px;\r\n  box-shadow: 0 0 0.4rem rgb(0 0 0 / 20%);\r\n\r\n  &:hover {\r\n    background-color: rgba(255, 255, 255, 0.5);\r\n  }\r\n\r\n  @media screen and (max-width: 500px) {\r\n    & {\r\n      margin-top: var(--size-600);\r\n    }\r\n  }\r\n`\r\n\r\nexport const PostListTitle = styled.h2`\r\n  line-height: 1.2;\r\n  margin-top: var(--size-400);\r\n  margin-bottom: var(--size-400);\r\n  text-transform: capitalize;\r\n  font-size: var(--size-600);\r\n  font-weight: 700;\r\n\r\n  & a::after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n  }\r\n`\r\n\r\nexport const PostListExcerpt = styled.p`\r\n  margin-top: auto;\r\n  font-size: var(--size-350);\r\n`\r\n\r\nexport const PostListMeta = styled.div`\r\n  margin-top: 2rem;\r\n\r\n  font-size: var(--size-300);\r\n`","import React, { FunctionComponent } from 'react'\r\nimport { Link } from 'gatsby'\r\nimport CategoryList from 'components/Post/CategoryList'\r\nimport {\r\n  StyledPostListItem,\r\n  PostListTitle,\r\n  PostListExcerpt,\r\n  PostListMeta\r\n} from './PostItem.style'\r\nimport {\r\n  PostFrontmatterType\r\n} from 'types/PostItem.types'\r\n\r\ntype PostItemProps = PostFrontmatterType & { link: string }\r\n\r\nconst PostItem: FunctionComponent<PostItemProps> = function ({\r\n  title,\r\n  date,\r\n  categories,\r\n  summary,\r\n  link\r\n}) {\r\n  return (\r\n    <StyledPostListItem>\r\n      <CategoryList categories={categories} />\r\n\r\n      <PostListTitle>\r\n        <Link to={link}>{title}</Link>\r\n      </PostListTitle>\r\n      <PostListExcerpt\r\n        dangerouslySetInnerHTML={{\r\n          __html: summary,\r\n        }}\r\n      />\r\n      <PostListMeta>\r\n        <span>{date}</span>\r\n      </PostListMeta>\r\n    </StyledPostListItem>\r\n  )\r\n}\r\n\r\nexport default PostItem","import styled from '@emotion/styled'\r\n\r\nexport const PostListWrapper = styled.div`\r\n  padding: 0;\r\n  list-style: none;\r\n  display: grid;\r\n  justify-items: center;\r\n  grid-gap: var(--size-600);\r\n  grid-template-columns: repeat(auto-fit, minmax(35ch, 1fr));\r\n\r\n  @media (max-width: 60rem) {\r\n    grid-template-columns: 1fr;\r\n    width: 100%;\r\n  }\r\n`","import React, { FunctionComponent } from 'react'\r\nimport PostItem from './PostItem'\r\nimport {\r\n  PostListWrapper\r\n} from './PostList.style'\r\nimport {\r\n  PostListItemType\r\n} from 'types/PostItem.types'\r\n\r\ntype PostListProps = {\r\n  posts: PostListItemType[]\r\n}\r\n\r\nconst PostList: FunctionComponent<PostListProps> = function ({\r\n  posts\r\n}) {\r\n  return (\r\n    <PostListWrapper>\r\n      {\r\n        posts.map(({\r\n          node: { id, fields: { slug }, frontmatter },\r\n        }: PostListItemType) => (\r\n          <PostItem {...frontmatter} key={id} link={slug}\r\n          />\r\n        ))\r\n      }\r\n    </PostListWrapper>\r\n  )\r\n}\r\n\r\nexport default PostList","import styled from '@emotion/styled'\r\n\r\nexport const StyledIntroduction = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 5rem 0;\r\n\r\n  @media (max-width: 55rem) {\r\n    width: 100%;\r\n    height: 300px;\r\n    padding: 0 20px;\r\n  }\r\n`\r\n\r\nexport const IntroduceWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  margin: 0 0 0 1.8rem;\r\n  cursor: default;\r\n`\r\n\r\nexport const Introduce = styled.p`\r\n  font-size: var(--size-350);\r\n  line-height: 110%;\r\n  margin: var(--size-400) 0 var(--size-400);\r\n`\r\n\r\nexport const Contact = styled.p`\r\n  font-size: 0.8rem;\r\n  display: flex;\r\n  flex-direction: row;\r\n\r\n  > a {\r\n    margin-right: 0.7rem;\r\n  }\r\n`","import React, { FunctionComponent } from 'react'\r\nimport { useStaticQuery, graphql } from 'gatsby'\r\nimport { GatsbyImage, IGatsbyImageData } from 'gatsby-plugin-image'\r\nimport styled from '@emotion/styled'\r\n\r\ntype ProfileImageProps = {\r\n  file: {\r\n    childImageSharp: {\r\n      gatsbyImageData: IGatsbyImageData\r\n    }\r\n  }\r\n}\r\n\r\nconst ProfileImageWrapper = styled(GatsbyImage)`\r\n  width: 7rem;\r\n  height: 7rem;\r\n  margin-bottom: 30px;\r\n  border-radius: 50%;\r\n\r\n  @media (max-width: 55rem) {\r\n    width: 80px;\r\n    height: 80px;\r\n  }\r\n`\r\n\r\nconst ProfileImage: FunctionComponent = function () {\r\n\r\n  const { file }: ProfileImageProps = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        file(name: { eq: \"profile-image\" }) {\r\n          childImageSharp {\r\n            gatsbyImageData(width: 120, height: 120)\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  return <ProfileImageWrapper image={file.childImageSharp.gatsbyImageData} alt=\"Profile Image\" />\r\n}\r\n\r\nexport default ProfileImage","import React, { FunctionComponent } from 'react'\r\nimport {\r\n  StyledIntroduction,\r\n  IntroduceWrapper,\r\n  Introduce,\r\n  Contact\r\n} from './Introduction.style'\r\nimport ProfileImage from './ProfileImage'\r\n\r\nconst Introduction: FunctionComponent = function () {\r\n  return (\r\n    <StyledIntroduction>\r\n      <ProfileImage />\r\n      <IntroduceWrapper>\r\n        <h1>ÌóàÏòàÏßÑ</h1>\r\n        <Introduce>ÏïàÎÖïÌïòÏÑ∏Ïöî. ÌîÑÎ°†Ìä∏ÏóîÎìú Í∞úÎ∞úÏûê ÌóàÏòàÏßÑ ÏûÖÎãàÎã§.</Introduce>\r\n        <Contact>\r\n          <a>üì§ Mail</a>\r\n          <a href='https://github.com/heo-it' target='_blank'>üîé GitHub</a>\r\n          <a href='https://www.instagram.com/heooo_yejin/' target='_blank'>ü§° Instagram</a>\r\n        </Contact>\r\n      </IntroduceWrapper>\r\n    </StyledIntroduction>\r\n  )\r\n}\r\n\r\nexport default Introduction","import React, { FunctionComponent } from 'react'\r\nimport { graphql } from 'gatsby'\r\nimport { PostListItemType } from 'types/PostItem.types'\r\nimport Layout from 'components/Layout/Layout'\r\nimport PostList from 'components/Post/PostList'\r\nimport Introduction from 'components/Profile/Introduction'\r\n\r\ntype IndexProps = {\r\n  data: {\r\n    allMarkdownRemark: {\r\n      edges: PostListItemType[]\r\n    }\r\n  }\r\n}\r\n\r\nconst IndexPage: FunctionComponent<IndexProps> = function({\r\n  data: {\r\n    allMarkdownRemark: { edges }\r\n  }\r\n}) {\r\n  return (\r\n    <Layout>\r\n      <Introduction />\r\n      <PostList posts={ edges } />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const IndexQuery = graphql`\r\n  {\r\n    allMarkdownRemark(\r\n      sort: { order: DESC, fields: [frontmatter___date, frontmatter___title] }\r\n    ) {\r\n      edges {\r\n        node {\r\n          id\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            title\r\n            date\r\n            summary\r\n            categories\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default IndexPage"],"names":["categories","___EmotionJSX","map","category","Category","key","Link","to","StyledPostListItem","PostListTitle","PostListExcerpt","PostListMeta","title","date","summary","link","CategoryList","dangerouslySetInnerHTML","__html","PostListWrapper","posts","node","id","slug","fields","frontmatter","PostItem","StyledIntroduction","IntroduceWrapper","Introduce","Contact","ProfileImageWrapper","GatsbyImage","process","file","useStaticQuery","image","childImageSharp","gatsbyImageData","alt","ProfileImage","href","target","edges","data","allMarkdownRemark","Layout","Introduction","PostList"],"sourceRoot":""}