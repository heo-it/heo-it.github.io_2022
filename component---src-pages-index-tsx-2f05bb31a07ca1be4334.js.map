{"version":3,"file":"component---src-pages-index-tsx-2f05bb31a07ca1be4334.js","mappings":"qKAEA,IAoBA,GApBc,E,QAAA,yX,oBCwBd,EAlB2D,YAEvD,IADFA,EACC,EADDA,WAEA,OACEC,EAAAA,EAAAA,IAAAA,MAAAA,KAEID,EAAWE,KAAI,SAACC,GACd,OACEF,EAAAA,EAAAA,IAACG,EAAD,CAAUC,IAAKF,IACbF,EAAAA,EAAAA,IAACK,EAAAA,KAAD,CAAMC,GAAE,aAAeJ,GAAaA,U,iGCf3C,IAAMK,GAAkB,+ZAsBlBC,GAAa,iRAkBbC,GAAe,qGAKfC,GAAY,iJ,UCJzB,EA5BmD,YAO/C,IANFC,EAMC,EANDA,MACAC,EAKC,EALDA,KACAb,EAIC,EAJDA,WACAc,EAGC,EAHDA,QACAC,EAEC,EAFDA,KACAC,EACC,EADDA,WAEA,OACEf,EAAAA,EAAAA,IAACO,EAAD,MACEP,EAAAA,EAAAA,IAACgB,EAAAA,EAAD,CAAcjB,WAAYA,KAE1BC,EAAAA,EAAAA,IAACQ,EAAD,MACER,EAAAA,EAAAA,IAACK,EAAAA,KAAD,CAAMC,GAAIQ,GAAOH,KAEnBX,EAAAA,EAAAA,IAACS,EAAD,CACEQ,wBAAyB,CACvBC,OAAQL,MAGZb,EAAAA,EAAAA,IAACU,EAAD,MACEV,EAAAA,EAAAA,IAAAA,OAAAA,KAAOY,IACPZ,EAAAA,EAAAA,IAAAA,OAAAA,KAAOe,EAAP,gBCnCD,IAAMI,GAAe,4QC2B5B,EAhBmD,YAE/C,IADFC,EACC,EADDA,MAEA,OACEpB,EAAAA,EAAAA,IAACmB,EAAD,KAEIC,EAAMnB,KAAI,oBACRoB,KAAQC,EADA,EACAA,GAAcC,EADd,EACIC,OAAUD,KAAQE,EADtB,EACsBA,YAAaV,EADnC,EACmCA,WADnC,OAGRf,EAAAA,EAAAA,IAAC0B,GAAD,UAAcD,EAAd,CAA2BrB,IAAKkB,EAAIR,KAAMS,EAAMR,WAAYA,W,mECpB/D,IAAMY,GAAkB,mLAWlBC,GAAgB,0JAQhBC,GAAS,gJAMTC,GAAO,sI,8BCdpB,IAAMC,GAAsB,OAAOC,EAAAA,EAAP,qBAAHC,CAAAA,KAAAA,UAAAA,OAAAA,mHA6BzB,EAjBwC,WAEtC,IAAQC,GAA4BC,EAAAA,EAAAA,gBAAe,cAA3CD,KAYR,OAAOlC,EAAAA,EAAAA,IAAC+B,EAAD,CAAqBK,MAAOF,EAAKG,gBAAgBC,gBAAiBC,IAAI,mBCb/E,EAjBwC,WACtC,OACEvC,EAAAA,EAAAA,IAAC2B,EAAD,MACE3B,EAAAA,EAAAA,IAACwC,EAAD,OACAxC,EAAAA,EAAAA,IAAC4B,EAAD,MACE5B,EAAAA,EAAAA,IAAAA,KAAAA,KAAAA,QACAA,EAAAA,EAAAA,IAAC6B,EAAD,mCACA7B,EAAAA,EAAAA,IAAC8B,EAAD,MACE9B,EAAAA,EAAAA,IAAAA,IAAAA,KAAAA,YACAA,EAAAA,EAAAA,IAAAA,IAAAA,CAAGyC,KAAK,4BAA4BC,OAAO,UAA3C,cACA1C,EAAAA,EAAAA,IAAAA,IAAAA,CAAGyC,KAAK,yCAAyCC,OAAO,UAAxD,qB,uECiCV,UArCiD,YAI7C,IAFqBC,EAEtB,EAHDC,KACEC,kBAAqBF,MAGvB,OACE3C,EAAAA,EAAAA,IAAC8C,EAAAA,EAAD,MACE9C,EAAAA,EAAAA,IAAC+C,EAAAA,EAAD,OACA/C,EAAAA,EAAAA,IAACgD,EAAAA,EAAD,CAAU5B,MAAQuB","sources":["webpack://gatsby-starter-default/./src/components/Post/CategoryList.style.tsx","webpack://gatsby-starter-default/./src/components/Post/CategoryList.tsx","webpack://gatsby-starter-default/./src/components/Post/PostItem.style.tsx","webpack://gatsby-starter-default/./src/components/Post/PostItem.tsx","webpack://gatsby-starter-default/./src/components/Post/PostList.style.tsx","webpack://gatsby-starter-default/./src/components/Post/PostList.tsx","webpack://gatsby-starter-default/./src/components/Profile/Introduction.style.tsx","webpack://gatsby-starter-default/./src/components/Profile/ProfileImage.tsx","webpack://gatsby-starter-default/./src/components/Profile/Introduction.tsx","webpack://gatsby-starter-default/./src/pages/index.tsx"],"sourcesContent":["import styled from \"@emotion/styled\"\n\nconst Category = styled.span`\n  margin-right: 0.6rem;\n  margin-bottom: 0.6rem;\n  text-transform: uppercase;\n  font-size: var(--size-300);\n\n  & a {\n    position: relative;\n    background-color: rgba(255, 255, 255, 0.7);\n    padding: 0.2rem 0.6rem;\n    border: 1px solid rgba(230, 230, 230, 1);\n    border-radius: 4px;\n  }\n\n  & a:hover {\n    background-color: rgba(237, 85, 110, 0.7);\n    color: rgba(255, 255, 255, 1);\n  }\n`;\n\nexport default Category","import React, { FunctionComponent } from 'react'\nimport Category from './CategoryList.style'\nimport { Link } from 'gatsby'\n\ntype CategoryListProps = {\n  categories: string[]\n}\n\nconst CategoryList: FunctionComponent<CategoryListProps> = function ({\n  categories\n}) {\n  return (\n    <div>\n      {\n        categories.map((category: string) => {\n          return (\n            <Category key={category}>\n              <Link to={`/category/${category}`}>{category}</Link>\n            </Category>\n          );\n        })\n      }\n    </div>\n  )\n}\n\nexport default CategoryList","import styled from '@emotion/styled'\n\nexport const StyledPostListItem = styled.li`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  padding: 1.5rem;\n  border: 1px solid rgba(255, 255, 255, 0.5);\n  background-color: rgba(250, 250, 250, 0.3);\n  backdrop-filter: blur(10px);\n  border-radius: 8px;\n  box-shadow: 0 0 0.4rem rgb(0 0 0 / 20%);\n\n  &:hover {\n    background-color: rgba(255, 255, 255, 0.5);\n  }\n\n  @media screen and (max-width: 500px) {\n    & {\n      margin-top: var(--size-600);\n    }\n  }\n`\n\nexport const PostListTitle = styled.h2`\n  line-height: 1.2;\n  margin-top: var(--size-400);\n  margin-bottom: var(--size-400);\n  text-transform: capitalize;\n  font-size: var(--size-600);\n  font-weight: 700;\n\n  & a::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n  }\n`\n\nexport const PostListExcerpt = styled.p`\n  margin-top: auto;\n  font-size: var(--size-350);\n`\n\nexport const PostListMeta = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 2rem;\n\n  font-size: var(--size-300);\n`","import React, { FunctionComponent } from 'react'\nimport { Link } from 'gatsby'\nimport CategoryList from 'components/Post/CategoryList'\nimport {\n  StyledPostListItem,\n  PostListTitle,\n  PostListExcerpt,\n  PostListMeta\n} from './PostItem.style'\nimport {\n  PostFrontmatterType\n} from 'types/PostItem.types'\n\ntype PostItemProps = PostFrontmatterType & { link: string, timeToRead: number }\n\nconst PostItem: FunctionComponent<PostItemProps> = function ({\n  title,\n  date,\n  categories,\n  summary,\n  link,\n  timeToRead\n}) {\n  return (\n    <StyledPostListItem>\n      <CategoryList categories={categories} />\n\n      <PostListTitle>\n        <Link to={link}>{title}</Link>\n      </PostListTitle>\n      <PostListExcerpt\n        dangerouslySetInnerHTML={{\n          __html: summary,\n        }}\n      />\n      <PostListMeta>\n        <span>{date}</span>\n        <span>{timeToRead} min read</span>\n      </PostListMeta>\n    </StyledPostListItem>\n  )\n}\n\nexport default PostItem","import styled from '@emotion/styled'\n\nexport const PostListWrapper = styled.div`\n  padding: 0;\n  list-style: none;\n  display: grid;\n  justify-items: center;\n  grid-gap: var(--size-600);\n  grid-template-columns: repeat(auto-fit, minmax(35ch, 1fr));\n\n  @media (max-width: 60rem) {\n    grid-template-columns: 1fr;\n    width: 100%;\n  }\n`","import React, { FunctionComponent } from 'react'\nimport PostItem from './PostItem'\nimport {\n  PostListWrapper\n} from './PostList.style'\nimport {\n  PostListItemType\n} from 'types/PostItem.types'\n\ntype PostListProps = {\n  posts: PostListItemType[]\n}\n\nconst PostList: FunctionComponent<PostListProps> = function ({\n  posts\n}) {\n  return (\n    <PostListWrapper>\n      {\n        posts.map(({\n          node: { id, fields: { slug }, frontmatter, timeToRead },\n        }: PostListItemType) => (\n          <PostItem {...frontmatter} key={id} link={slug} timeToRead={timeToRead} />\n        ))\n      }\n    </PostListWrapper>\n  )\n}\n\nexport default PostList","import styled from '@emotion/styled'\n\nexport const StyledIntroduction = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 5rem 0;\n\n  @media (max-width: 768px) {\n    padding-right: 1rem;\n  }\n`\n\nexport const IntroduceWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin: 0 0 0 1.8rem;\n  cursor: default;\n`\n\nexport const Introduce = styled.p`\n  font-size: var(--size-350);\n  line-height: 110%;\n  margin: var(--size-400) 0 var(--size-400);\n`\n\nexport const Contact = styled.p`\n  font-size: 0.8rem;\n  display: flex;\n  flex-direction: row;\n\n  > a {\n    margin-right: 0.7rem;\n  }\n`","import React, { FunctionComponent } from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport { GatsbyImage, IGatsbyImageData } from 'gatsby-plugin-image'\nimport styled from '@emotion/styled'\n\ntype ProfileImageProps = {\n  file: {\n    childImageSharp: {\n      gatsbyImageData: IGatsbyImageData\n    }\n  }\n}\n\nconst ProfileImageWrapper = styled(GatsbyImage)`\n  width: 7rem;\n  height: 7rem;\n  margin-bottom: 30px;\n  border-radius: 50%;\n\n  @media (max-width: 55rem) {\n    width: 80px;\n    height: 80px;\n  }\n`\n\nconst ProfileImage: FunctionComponent = function () {\n\n  const { file }: ProfileImageProps = useStaticQuery(\n    graphql`\n      query {\n        file(name: { eq: \"profile-image\" }) {\n          childImageSharp {\n            gatsbyImageData(width: 120, height: 120)\n          }\n        }\n      }\n    `\n  )\n\n  return <ProfileImageWrapper image={file.childImageSharp.gatsbyImageData} alt=\"Profile Image\" />\n}\n\nexport default ProfileImage","import React, { FunctionComponent } from 'react'\nimport {\n  StyledIntroduction,\n  IntroduceWrapper,\n  Introduce,\n  Contact\n} from './Introduction.style'\nimport ProfileImage from './ProfileImage'\n\nconst Introduction: FunctionComponent = function () {\n  return (\n    <StyledIntroduction>\n      <ProfileImage />\n      <IntroduceWrapper>\n        <h1>ÌóàÏòàÏßÑ</h1>\n        <Introduce>ÏïàÎÖïÌïòÏÑ∏Ïöî. ÌîÑÎ°†Ìä∏ÏóîÎìú Í∞úÎ∞úÏûê ÌóàÏòàÏßÑ ÏûÖÎãàÎã§.</Introduce>\n        <Contact>\n          <a>üì§ Mail</a>\n          <a href='https://github.com/heo-it' target='_blank'>üîé GitHub</a>\n          <a href='https://www.instagram.com/heooo_yejin/' target='_blank'>ü§° Instagram</a>\n        </Contact>\n      </IntroduceWrapper>\n    </StyledIntroduction>\n  )\n}\n\nexport default Introduction","import React, { FunctionComponent } from 'react'\nimport { graphql } from 'gatsby'\nimport { PostListItemType } from 'types/PostItem.types'\nimport Layout from 'components/Layout/Layout'\nimport PostList from 'components/Post/PostList'\nimport Introduction from 'components/Profile/Introduction'\n\ntype IndexProps = {\n  data: {\n    allMarkdownRemark: {\n      edges: PostListItemType[]\n    }\n  }\n}\n\nconst IndexPage: FunctionComponent<IndexProps> = function({\n  data: {\n    allMarkdownRemark: { edges }\n  }\n}) {\n  return (\n    <Layout>\n      <Introduction />\n      <PostList posts={ edges } />\n    </Layout>\n  )\n}\n\nexport const IndexQuery = graphql`\n  {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date, frontmatter___title] }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date\n            summary\n            categories\n          }\n          timeToRead\n        }\n      }\n    }\n  }\n`;\n\nexport default IndexPage"],"names":["categories","___EmotionJSX","map","category","Category","key","Link","to","StyledPostListItem","PostListTitle","PostListExcerpt","PostListMeta","title","date","summary","link","timeToRead","CategoryList","dangerouslySetInnerHTML","__html","PostListWrapper","posts","node","id","slug","fields","frontmatter","PostItem","StyledIntroduction","IntroduceWrapper","Introduce","Contact","ProfileImageWrapper","GatsbyImage","process","file","useStaticQuery","image","childImageSharp","gatsbyImageData","alt","ProfileImage","href","target","edges","data","allMarkdownRemark","Layout","Introduction","PostList"],"sourceRoot":""}