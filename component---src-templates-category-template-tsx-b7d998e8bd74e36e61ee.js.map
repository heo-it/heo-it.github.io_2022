{"version":3,"file":"component---src-templates-category-template-tsx-b7d998e8bd74e36e61ee.js","mappings":"qKAEA,IAkBA,GAlBc,E,QAAA,+S,oBCwBd,EAlB2D,YAEvD,IADFA,EACC,EADDA,WAEA,OACEC,EAAAA,EAAAA,IAAAA,MAAAA,KAEID,EAAWE,KAAI,SAACC,GACd,OACEF,EAAAA,EAAAA,IAACG,EAAD,CAAUC,IAAKF,IACbF,EAAAA,EAAAA,IAACK,EAAAA,KAAD,CAAMC,GAAE,aAAeJ,GAAaA,U,qDCflD,IAqBA,GArBwB,E,QAAA,oT,UCkBxB,EAZyD,YAErD,IADFK,EACC,EADDA,MAAOC,EACN,EADMA,YAGP,OACER,EAAAA,EAAAA,IAACS,EAAD,MACET,EAAAA,EAAAA,IAAAA,KAAAA,KAAMO,IACNP,EAAAA,EAAAA,IAAAA,IAAAA,KAAKQ,M,iGCbJ,IAAME,GAAkB,0aAuBlBC,GAAa,iQAiBbC,GAAe,qGAKfC,GAAY,iJ,UCJzB,EA5BmD,YAO/C,IANFN,EAMC,EANDA,MACAO,EAKC,EALDA,KACAf,EAIC,EAJDA,WACAgB,EAGC,EAHDA,QACAC,EAEC,EAFDA,KACAC,EACC,EADDA,WAEA,OACEjB,EAAAA,EAAAA,IAACU,EAAD,MACEV,EAAAA,EAAAA,IAACkB,EAAAA,EAAD,CAAcnB,WAAYA,KAE1BC,EAAAA,EAAAA,IAACW,EAAD,MACEX,EAAAA,EAAAA,IAACK,EAAAA,KAAD,CAAMC,GAAIU,GAAOT,KAEnBP,EAAAA,EAAAA,IAACY,EAAD,CACEO,wBAAyB,CACvBC,OAAQL,MAGZf,EAAAA,EAAAA,IAACa,EAAD,MACEb,EAAAA,EAAAA,IAAAA,OAAAA,KAAOc,IACPd,EAAAA,EAAAA,IAAAA,OAAAA,KAAOiB,EAAP,gBCnCD,IAAMI,GAAe,kNC2B5B,EAhBmD,YAE/C,IADFC,EACC,EADDA,MAEA,OACEtB,EAAAA,EAAAA,IAACqB,EAAD,KAEIC,EAAMrB,KAAI,oBACRsB,KAAQC,EADA,EACAA,GAAcC,EADd,EACIC,OAAUD,KAAQE,EADtB,EACsBA,YAAaV,EADnC,EACmCA,WADnC,OAGRjB,EAAAA,EAAAA,IAAC4B,GAAD,UAAcD,EAAd,CAA2BvB,IAAKoB,EAAIR,KAAMS,EAAMR,WAAYA,W,uECmCtE,UApCmE,YAK/D,IAHqBY,EAGtB,EAJDC,KACEC,kBAAqBF,MAGtB,IADDG,YAAeC,EACd,EADcA,WAAYC,EAC1B,EAD0BA,WAE3B,OACElC,EAAAA,EAAAA,IAACmC,EAAAA,EAAD,CAAQ5B,MAAO0B,EAAYzB,YAAgB0B,EAAL,WACpClC,EAAAA,EAAAA,IAACoC,EAAAA,EAAD,CAAa7B,MAAO0B,EAAYzB,YAAgB0B,EAAL,YAC3ClC,EAAAA,EAAAA,IAACqC,EAAAA,EAAD,CAAUf,MAAQO","sources":["webpack://gatsby-starter-default/./src/components/Category/CategoryList.style.tsx","webpack://gatsby-starter-default/./src/components/Category/CategoryList.tsx","webpack://gatsby-starter-default/./src/components/Layout/Description.style.tsx","webpack://gatsby-starter-default/./src/components/Layout/Description.tsx","webpack://gatsby-starter-default/./src/components/Post/PostItem.style.tsx","webpack://gatsby-starter-default/./src/components/Post/PostItem.tsx","webpack://gatsby-starter-default/./src/components/Post/PostList.style.tsx","webpack://gatsby-starter-default/./src/components/Post/PostList.tsx","webpack://gatsby-starter-default/./src/templates/category_template.tsx"],"sourcesContent":["import styled from \"@emotion/styled\"\n\nconst Category = styled.span`\n  margin-right: 0.6rem;\n  margin-bottom: 0.6rem;\n  text-transform: uppercase;\n  font-size: var(--size-300);\n\n  & a {\n    position: relative;\n    background-color: #c6dce4;\n    padding: 0.2rem 0.5rem;\n  }\n\n  & a:hover {\n    background-color: rgba(237, 85, 110, 0.7);\n    color: rgba(255, 255, 255, 1);\n  }\n`;\n\nexport default Category","import React, { FunctionComponent } from 'react'\nimport Category from './CategoryList.style'\nimport { Link } from 'gatsby'\n\ntype CategoryListProps = {\n  categories: string[]\n}\n\nconst CategoryList: FunctionComponent<CategoryListProps> = function ({\n  categories\n}) {\n  return (\n    <div>\n      {\n        categories.map((category: string) => {\n          return (\n            <Category key={category}>\n              <Link to={`/category/${category}`}>{category}</Link>\n            </Category>\n          );\n        })\n      }\n    </div>\n  )\n}\n\nexport default CategoryList","import styled from '@emotion/styled'\n\nconst DescriptionWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: var(--size-800);\n  margin-bottom: var(--size-800);\n  padding-left: 1.8rem;\n\n  > h1 {\n    font-size: var(--size-800);\n    max-width: none;\n  }\n\n  > p {\n    width: fit-content;\n    font-size: var(--size-400);\n    margin-top: 15px;\n    padding: 0.1rem;\n    color: #6a7280;\n  }\n`\n\nexport default DescriptionWrapper","import React, { FunctionComponent } from 'react'\nimport DescriptionWrapper from './Description.style'\n\ntype DescriptionProps = {\n  title: string,\n  description: string\n}\n\nconst Description: FunctionComponent<DescriptionProps> = function ({\n  title, description\n}) {\n\n  return (\n    <DescriptionWrapper>\n      <h1>{ title }</h1>\n      <p>{ description }</p>\n    </DescriptionWrapper>\n  )\n}\n\nexport default Description","import styled from '@emotion/styled'\n\nexport const StyledPostListItem = styled.li`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  padding: 1.5rem;\n  width: 90%;\n  border: 1px solid rgba(255, 255, 255, 0.5);\n  background-color: rgba(250, 250, 250, 0.3);\n  backdrop-filter: blur(10px);\n  border-radius: 8px;\n  box-shadow: 0 0 0.4rem rgb(0 0 0 / 20%);\n\n  &:hover {\n    background-color: rgba(255, 255, 255, 0.5);\n  }\n\n  @media screen and (max-width: 500px) {\n    & {\n      margin-top: var(--size-600);\n    }\n  }\n`\n\nexport const PostListTitle = styled.h2`\n  line-height: 1.2;\n  margin-top: var(--size-400);\n  margin-bottom: var(--size-400);\n  text-transform: capitalize;\n  font-size: var(--size-600);\n\n  & a::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n  }\n`\n\nexport const PostListExcerpt = styled.p`\n  margin-top: auto;\n  font-size: var(--size-350);\n`\n\nexport const PostListMeta = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 2rem;\n\n  font-size: var(--size-300);\n`","import React, { FunctionComponent } from 'react'\nimport { Link } from 'gatsby'\nimport CategoryList from 'components/Category/CategoryList'\nimport {\n  StyledPostListItem,\n  PostListTitle,\n  PostListExcerpt,\n  PostListMeta\n} from './PostItem.style'\nimport {\n  PostFrontmatterType\n} from 'types/PostItem.types'\n\ntype PostItemProps = PostFrontmatterType & { link: string, timeToRead: number }\n\nconst PostItem: FunctionComponent<PostItemProps> = function ({\n  title,\n  date,\n  categories,\n  summary,\n  link,\n  timeToRead\n}) {\n  return (\n    <StyledPostListItem>\n      <CategoryList categories={categories} />\n\n      <PostListTitle>\n        <Link to={link}>{title}</Link>\n      </PostListTitle>\n      <PostListExcerpt\n        dangerouslySetInnerHTML={{\n          __html: summary,\n        }}\n      />\n      <PostListMeta>\n        <span>{date}</span>\n        <span>{timeToRead} min read</span>\n      </PostListMeta>\n    </StyledPostListItem>\n  )\n}\n\nexport default PostItem","import styled from '@emotion/styled'\n\nexport const PostListWrapper = styled.ul`\n  padding: 0;\n  list-style: none;\n  display: grid;\n  justify-items: center;\n  grid-gap: var(--size-600);\n\n  @media (max-width: 60rem) {\n    grid-template-columns: 1fr;\n    width: 100%;\n  }\n`","import React, { FunctionComponent } from 'react'\nimport PostItem from './PostItem'\nimport {\n  PostListWrapper\n} from './PostList.style'\nimport {\n  PostListItemType\n} from 'types/PostItem.types'\n\ntype PostListProps = {\n  posts: PostListItemType[]\n}\n\nconst PostList: FunctionComponent<PostListProps> = function ({\n  posts\n}) {\n  return (\n    <PostListWrapper>\n      {\n        posts.map(({\n          node: { id, fields: { slug }, frontmatter, timeToRead },\n        }: PostListItemType) => (\n          <PostItem {...frontmatter} key={id} link={slug} timeToRead={timeToRead} />\n        ))\n      }\n    </PostListWrapper>\n  )\n}\n\nexport default PostList","import { graphql } from 'gatsby';\nimport React, { FunctionComponent } from 'react'\nimport {\n  PostListItemType\n} from 'types/PostItem.types'\nimport Layout from 'components/Layout/Layout'\nimport PostList from 'components/Post/PostList'\nimport Description from 'components/Layout/Description'\n\ntype CategoryTemplateProps = {\n  data: {\n    allMarkdownRemark: {\n      edges: PostListItemType[]\n    }\n  }\n  pageContext: {\n    fieldValue: string\n    totalCount: number\n  }\n}\n\nconst CategoryTemplate: FunctionComponent<CategoryTemplateProps> = function ({\n  data: {\n    allMarkdownRemark: { edges }\n  },\n  pageContext: { fieldValue, totalCount }\n}) {\n  return (\n    <Layout title={fieldValue} description={`${totalCount}개의 게시글`}>\n      <Description title={fieldValue} description={`${totalCount}개의 게시글`} />\n      <PostList posts={ edges } />\n    </Layout>\n  )\n}\n\nexport const CategoryTemplateQuery = graphql`\n  query queryMarkdownDataByCategory($fieldValue: String) {\n    allMarkdownRemark(filter: {frontmatter: {categories: {eq: $fieldValue } } }){\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          html\n          frontmatter {\n            title\n            date\n            summary\n            categories\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default CategoryTemplate"],"names":["categories","___EmotionJSX","map","category","Category","key","Link","to","title","description","DescriptionWrapper","StyledPostListItem","PostListTitle","PostListExcerpt","PostListMeta","date","summary","link","timeToRead","CategoryList","dangerouslySetInnerHTML","__html","PostListWrapper","posts","node","id","slug","fields","frontmatter","PostItem","edges","data","allMarkdownRemark","pageContext","fieldValue","totalCount","Layout","Description","PostList"],"sourceRoot":""}