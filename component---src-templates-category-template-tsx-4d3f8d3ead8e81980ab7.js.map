{"version":3,"file":"component---src-templates-category-template-tsx-4d3f8d3ead8e81980ab7.js","mappings":"qKAEA,IAmBA,GAnBwB,E,QAAA,2R,UCkBxB,EAZyD,YAErD,IADFA,EACC,EADDA,MAAOC,EACN,EADMA,YAGP,OACEC,EAAAA,EAAAA,IAACC,EAAD,MACED,EAAAA,EAAAA,IAAAA,KAAAA,KAAMF,IACNE,EAAAA,EAAAA,IAAAA,IAAAA,KAAKD,M,qDCbX,IAoBA,GApBc,E,QAAA,yX,oBCwBd,EAlB2D,YAEvD,IADFG,EACC,EADDA,WAEA,OACEF,EAAAA,EAAAA,IAAAA,MAAAA,KAEIE,EAAWC,KAAI,SAACC,GACd,OACEJ,EAAAA,EAAAA,IAACK,EAAD,CAAUC,IAAKF,IACbJ,EAAAA,EAAAA,IAACO,EAAAA,KAAD,CAAMC,GAAE,aAAeJ,GAAaA,U,iGCf3C,IAAMK,GAAkB,+ZAsBlBC,GAAa,iRAkBbC,GAAe,qGAKfC,GAAY,sG,UCNzB,EA1BmD,YAM/C,IALFd,EAKC,EALDA,MACAe,EAIC,EAJDA,KACAX,EAGC,EAHDA,WACAY,EAEC,EAFDA,QACAC,EACC,EADDA,KAEA,OACEf,EAAAA,EAAAA,IAACS,EAAD,MACET,EAAAA,EAAAA,IAACgB,EAAAA,EAAD,CAAcd,WAAYA,KAE1BF,EAAAA,EAAAA,IAACU,EAAD,MACEV,EAAAA,EAAAA,IAACO,EAAAA,KAAD,CAAMC,GAAIO,GAAOjB,KAEnBE,EAAAA,EAAAA,IAACW,EAAD,CACEM,wBAAyB,CACvBC,OAAQJ,MAGZd,EAAAA,EAAAA,IAACY,EAAD,MACEZ,EAAAA,EAAAA,IAAAA,OAAAA,KAAOa,MCjCR,IAAMM,GAAe,4QC4B5B,EAjBmD,YAE/C,IADFC,EACC,EADDA,MAEA,OACEpB,EAAAA,EAAAA,IAACmB,EAAD,KAEIC,EAAMjB,KAAI,oBACRkB,KAAQC,EADA,EACAA,GAAcC,EADd,EACIC,OAAUD,KAAQE,EADtB,EACsBA,YADtB,OAGRzB,EAAAA,EAAAA,IAAC0B,GAAD,UAAcD,EAAd,CAA2BnB,IAAKgB,EAAIP,KAAMQ,W,uECmCpD,UApCmE,YAK/D,IAHqBI,EAGtB,EAJDC,KACEC,kBAAqBF,MAGtB,IADDG,YAAeC,EACd,EADcA,WAAYC,EAC1B,EAD0BA,WAE3B,OACEhC,EAAAA,EAAAA,IAACiC,EAAAA,EAAD,CAAQnC,MAAOiC,EAAYhC,YAAgBiC,EAAL,WACpChC,EAAAA,EAAAA,IAACkC,EAAAA,EAAD,CAAapC,MAAOiC,EAAYhC,YAAgBiC,EAAL,YAC3ChC,EAAAA,EAAAA,IAACmC,EAAAA,EAAD,CAAUf,MAAQO","sources":["webpack://gatsby-starter-default/./src/components/Layout/Description.style.tsx","webpack://gatsby-starter-default/./src/components/Layout/Description.tsx","webpack://gatsby-starter-default/./src/components/Post/CategoryList.style.tsx","webpack://gatsby-starter-default/./src/components/Post/CategoryList.tsx","webpack://gatsby-starter-default/./src/components/Post/PostItem.style.tsx","webpack://gatsby-starter-default/./src/components/Post/PostItem.tsx","webpack://gatsby-starter-default/./src/components/Post/PostList.style.tsx","webpack://gatsby-starter-default/./src/components/Post/PostList.tsx","webpack://gatsby-starter-default/./src/templates/category_template.tsx"],"sourcesContent":["import styled from '@emotion/styled'\r\n\r\nconst DescriptionWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-top: var(--size-900);\r\n  margin-bottom: var(--size-700);\r\n  text-align: center;\r\n\r\n  > h1 {\r\n    font-size: var(--size-800);\r\n    max-width: none;\r\n    color: rgb(237, 85, 110);\r\n  }\r\n\r\n  > p {\r\n    font-size: var(--size-400);\r\n    margin-top: 15px;\r\n  }\r\n`\r\n\r\nexport default DescriptionWrapper","import React, { FunctionComponent } from 'react'\r\nimport DescriptionWrapper from './Description.style'\r\n\r\ntype DescriptionProps = {\r\n  title: string,\r\n  description: string\r\n}\r\n\r\nconst Description: FunctionComponent<DescriptionProps> = function ({\r\n  title, description\r\n}) {\r\n\r\n  return (\r\n    <DescriptionWrapper>\r\n      <h1>{ title }</h1>\r\n      <p>{ description }</p>\r\n    </DescriptionWrapper>\r\n  )\r\n}\r\n\r\nexport default Description","import styled from \"@emotion/styled\"\r\n\r\nconst Category = styled.span`\r\n  margin-right: 0.6rem;\r\n  margin-bottom: 0.6rem;\r\n  text-transform: uppercase;\r\n  font-size: var(--size-300);\r\n\r\n  & a {\r\n    position: relative;\r\n    background-color: rgba(255, 255, 255, 0.7);\r\n    padding: 0.2rem 0.6rem;\r\n    border: 1px solid rgba(230, 230, 230, 1);\r\n    border-radius: 4px;\r\n  }\r\n\r\n  & a:hover {\r\n    background-color: rgba(237, 85, 110, 0.7);\r\n    color: rgba(255, 255, 255, 1);\r\n  }\r\n`;\r\n\r\nexport default Category","import React, { FunctionComponent } from 'react'\r\nimport Category from './CategoryList.style'\r\nimport { Link } from 'gatsby'\r\n\r\ntype CategoryListProps = {\r\n  categories: string[]\r\n}\r\n\r\nconst CategoryList: FunctionComponent<CategoryListProps> = function ({\r\n  categories\r\n}) {\r\n  return (\r\n    <div>\r\n      {\r\n        categories.map((category: string) => {\r\n          return (\r\n            <Category key={category}>\r\n              <Link to={`/category/${category}`}>{category}</Link>\r\n            </Category>\r\n          );\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CategoryList","import styled from '@emotion/styled'\r\n\r\nexport const StyledPostListItem = styled.li`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 1.5rem;\r\n  border: 1px solid rgba(255, 255, 255, 0.5);\r\n  background-color: rgba(250, 250, 250, 0.3);\r\n  backdrop-filter: blur(10px);\r\n  border-radius: 8px;\r\n  box-shadow: 0 0 0.4rem rgb(0 0 0 / 20%);\r\n\r\n  &:hover {\r\n    background-color: rgba(255, 255, 255, 0.5);\r\n  }\r\n\r\n  @media screen and (max-width: 500px) {\r\n    & {\r\n      margin-top: var(--size-600);\r\n    }\r\n  }\r\n`\r\n\r\nexport const PostListTitle = styled.h2`\r\n  line-height: 1.2;\r\n  margin-top: var(--size-400);\r\n  margin-bottom: var(--size-400);\r\n  text-transform: capitalize;\r\n  font-size: var(--size-600);\r\n  font-weight: 700;\r\n\r\n  & a::after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n  }\r\n`\r\n\r\nexport const PostListExcerpt = styled.p`\r\n  margin-top: auto;\r\n  font-size: var(--size-350);\r\n`\r\n\r\nexport const PostListMeta = styled.div`\r\n  margin-top: 2rem;\r\n\r\n  font-size: var(--size-300);\r\n`","import React, { FunctionComponent } from 'react'\r\nimport { Link } from 'gatsby'\r\nimport CategoryList from 'components/Post/CategoryList'\r\nimport {\r\n  StyledPostListItem,\r\n  PostListTitle,\r\n  PostListExcerpt,\r\n  PostListMeta\r\n} from './PostItem.style'\r\nimport {\r\n  PostFrontmatterType\r\n} from 'types/PostItem.types'\r\n\r\ntype PostItemProps = PostFrontmatterType & { link: string }\r\n\r\nconst PostItem: FunctionComponent<PostItemProps> = function ({\r\n  title,\r\n  date,\r\n  categories,\r\n  summary,\r\n  link\r\n}) {\r\n  return (\r\n    <StyledPostListItem>\r\n      <CategoryList categories={categories} />\r\n\r\n      <PostListTitle>\r\n        <Link to={link}>{title}</Link>\r\n      </PostListTitle>\r\n      <PostListExcerpt\r\n        dangerouslySetInnerHTML={{\r\n          __html: summary,\r\n        }}\r\n      />\r\n      <PostListMeta>\r\n        <span>{date}</span>\r\n      </PostListMeta>\r\n    </StyledPostListItem>\r\n  )\r\n}\r\n\r\nexport default PostItem","import styled from '@emotion/styled'\r\n\r\nexport const PostListWrapper = styled.div`\r\n  padding: 0;\r\n  list-style: none;\r\n  display: grid;\r\n  justify-items: center;\r\n  grid-gap: var(--size-600);\r\n  grid-template-columns: repeat(auto-fit, minmax(35ch, 1fr));\r\n\r\n  @media (max-width: 60rem) {\r\n    grid-template-columns: 1fr;\r\n    width: 100%;\r\n  }\r\n`","import React, { FunctionComponent } from 'react'\r\nimport PostItem from './PostItem'\r\nimport {\r\n  PostListWrapper\r\n} from './PostList.style'\r\nimport {\r\n  PostListItemType\r\n} from 'types/PostItem.types'\r\n\r\ntype PostListProps = {\r\n  posts: PostListItemType[]\r\n}\r\n\r\nconst PostList: FunctionComponent<PostListProps> = function ({\r\n  posts\r\n}) {\r\n  return (\r\n    <PostListWrapper>\r\n      {\r\n        posts.map(({\r\n          node: { id, fields: { slug }, frontmatter },\r\n        }: PostListItemType) => (\r\n          <PostItem {...frontmatter} key={id} link={slug}\r\n          />\r\n        ))\r\n      }\r\n    </PostListWrapper>\r\n  )\r\n}\r\n\r\nexport default PostList","import { graphql } from 'gatsby';\r\nimport React, { FunctionComponent } from 'react'\r\nimport {\r\n  PostListItemType\r\n} from 'types/PostItem.types'\r\nimport Layout from 'components/Layout/Layout'\r\nimport PostList from 'components/Post/PostList'\r\nimport Description from 'components/Layout/Description'\r\n\r\ntype CategoryTemplateProps = {\r\n  data: {\r\n    allMarkdownRemark: {\r\n      edges: PostListItemType[]\r\n    }\r\n  }\r\n  pageContext: {\r\n    fieldValue: string\r\n    totalCount: number\r\n  }\r\n}\r\n\r\nconst CategoryTemplate: FunctionComponent<CategoryTemplateProps> = function ({\r\n  data: {\r\n    allMarkdownRemark: { edges }\r\n  },\r\n  pageContext: { fieldValue, totalCount }\r\n}) {\r\n  return (\r\n    <Layout title={fieldValue} description={`${totalCount}개의 게시글`}>\r\n      <Description title={fieldValue} description={`${totalCount}개의 게시글`} />\r\n      <PostList posts={ edges } />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const CategoryTemplateQuery = graphql`\r\n  query queryMarkdownDataByCategory($fieldValue: String) {\r\n    allMarkdownRemark(filter: {frontmatter: {categories: {eq: $fieldValue } } }){\r\n      edges {\r\n        node {\r\n          id\r\n          fields {\r\n            slug\r\n          }\r\n          html\r\n          frontmatter {\r\n            title\r\n            date\r\n            summary\r\n            categories\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default CategoryTemplate"],"names":["title","description","___EmotionJSX","DescriptionWrapper","categories","map","category","Category","key","Link","to","StyledPostListItem","PostListTitle","PostListExcerpt","PostListMeta","date","summary","link","CategoryList","dangerouslySetInnerHTML","__html","PostListWrapper","posts","node","id","slug","fields","frontmatter","PostItem","edges","data","allMarkdownRemark","pageContext","fieldValue","totalCount","Layout","Description","PostList"],"sourceRoot":""}